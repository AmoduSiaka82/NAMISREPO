// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NAMIS.Data;

namespace NAMIS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221206071925_rofDa")]
    partial class rofDa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NAMIS.Models.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Actions")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Attachement")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Controllers")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Dy")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("IdNo")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Mnt")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status3")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status4")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Subject")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UAction")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UController")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserStatus")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Yr")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Box");
                });

            modelBuilder.Entity("NAMIS.Models.CareerProgression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("AttachFile")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Authorise")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Body")
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("CareerId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CurrentAppointment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstAppointment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateofCurrentAppointment")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Day")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LStatus")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Mnt")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProposeGrade")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProposeRank")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProposeStep")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Recipient")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RefNo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark1")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark2")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark3")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark4")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SignFor")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SprpNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Step")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Yr")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("CareerProgression");
                });

            modelBuilder.Entity("NAMIS.Models.Confirmationofappointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Authorise")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Body")
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("ConId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CurrentAppointment")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateD")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDue")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateF")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstAppointment")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Day")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LStatus")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Mnt")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Recipient")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RefNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark1")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark2")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark3")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Remark4")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Sex")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SignFor")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Yr")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("YrC")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("Confirmationofappointment");
                });

            modelBuilder.Entity("NAMIS.Models.CountryMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Natinality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CountryMaster");
                });

            modelBuilder.Entity("NAMIS.Models.DailyMotorVehicleWorkBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthorityforJourney")
                        .IsRequired()
                        .HasColumnType("varchar(550)");

                    b.Property<string>("DailyID")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Day")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Frm")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Mnt")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PetrolOilReceived")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SpeedometerOut")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SpeedometerReadsIn")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TankCapacity")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TimeIn")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TimeOut")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tos")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TotalMilesKmRun")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserSign")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("VehicleNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Yr")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DailyMotorVehicleWorkBook");
                });

            modelBuilder.Entity("NAMIS.Models.Directive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Act")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("OfficerName")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("RefNo")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("Responsibility")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Directives");
                });

            modelBuilder.Entity("NAMIS.Models.FileDestination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DestinationName")
                        .HasColumnType("varchar(250)");

                    b.HasKey("ID");

                    b.ToTable("FileDestination");
                });

            modelBuilder.Entity("NAMIS.Models.Leaves", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Addresse")
                        .HasColumnType("text");

                    b.Property<string>("Authorise")
                        .HasColumnType("text");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("BoxId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<DateTime>("EDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("text");

                    b.Property<string>("LStatus")
                        .HasColumnType("text");

                    b.Property<string>("LeaveType")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("NoOfDays")
                        .HasColumnType("text");

                    b.Property<DateTime>("RDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Remark1")
                        .HasColumnType("text");

                    b.Property<string>("Remark2")
                        .HasColumnType("text");

                    b.Property<string>("Remark3")
                        .HasColumnType("text");

                    b.Property<string>("Remark4")
                        .HasColumnType("text");

                    b.Property<DateTime>("ResumeDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Salutation")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("SignFor")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Step")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("NAMIS.Models.LoadUserPage", b =>
                {
                    b.Property<int>("PageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PageName")
                        .HasColumnType("varchar(150)");

                    b.HasKey("PageID");

                    b.ToTable("LoadUserPage");
                });

            modelBuilder.Entity("NAMIS.Models.Memo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Authorise")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("ConId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Copi")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MemoTitle")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nspri")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("varchar(350)");

                    b.Property<string>("RefNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SignFor")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("StationName")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Memo");
                });

            modelBuilder.Entity("NAMIS.Models.MinuteOfMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BoxID")
                        .HasColumnType("text");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("MinuteID")
                        .HasColumnType("text");

                    b.Property<string>("MinuteNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MinuteTitle")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MinuteOfMeeting");
                });

            modelBuilder.Entity("NAMIS.Models.MinuteRegister", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Attendance")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MinuteNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MinuteTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MinuteRegister");
                });

            modelBuilder.Entity("NAMIS.Models.PersonelFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("DestinationName")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExpDates")
                        .HasColumnType("text");

                    b.Property<string>("FistName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("PersonelFile");
                });

            modelBuilder.Entity("NAMIS.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Qualify")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("NAMIS.Models.Refrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RefNo")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Refrences");
                });

            modelBuilder.Entity("NAMIS.Models.StaffPosting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Authorise")
                        .HasColumnType("text");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<string>("CurrentAppointment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateD")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDue")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateF")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstAppointment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfResumetion")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("text");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text");

                    b.Property<string>("LStatus")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("PDepartment")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Remark1")
                        .HasColumnType("text");

                    b.Property<string>("Remark2")
                        .HasColumnType("text");

                    b.Property<string>("Remark3")
                        .HasColumnType("text");

                    b.Property<string>("Remark4")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("SignFor")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.Property<string>("YrC")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("StaffPosting");
                });

            modelBuilder.Entity("NAMIS.Models.TopMenus", b =>
                {
                    b.Property<int>("menuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("menuName")
                        .HasColumnType("text");

                    b.HasKey("menuId");

                    b.ToTable("TopMenus");
                });

            modelBuilder.Entity("NAMIS.Models.TrainingAndStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Authorise")
                        .HasColumnType("text");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<DateTime>("EDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EDates")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("text");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text");

                    b.Property<string>("LStatus")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("NoOfDays")
                        .HasColumnType("text");

                    b.Property<string>("QualificationInView")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("SDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SDates")
                        .HasColumnType("text");

                    b.Property<string>("SignFor")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Step")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TrainingDescription")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("TrainingAndStudy");
                });

            modelBuilder.Entity("NAMIS.Models.VehicleRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TankCapacity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VehicleRecord");
                });

            modelBuilder.Entity("NAMIS.Models.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("DidKnow")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PurposeOfVisit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("TimeOfVisit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("VisitID")
                        .HasColumnType("text");

                    b.Property<string>("VisitorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WhoToVisit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("NAMIS.Models.biodata", b =>
                {
                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AppointmentStatus")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Carder")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CheckBy")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConfirmationYr")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CurrentAppointment")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DateOfAppointment")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfCurrentAppointment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstAppointment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstArrival")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfPromotion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfRetirement")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Decoration")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("GeographicalLocation")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GradeLevel")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HighestQualification")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("IPPISNO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LGAOrigin")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NHFNO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NHISNO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Natinality")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PFA")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PinNo")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProStatus")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProYr")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Proof")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("QualificationInView")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RMode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RStatus")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RYr")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StateOfOrigin")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SubstansiveAppointment")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TermsOfEngagement")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Time")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TrainingStatus")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(500)");

                    b.HasKey("SprpNo");

                    b.ToTable("biodata");
                });

            modelBuilder.Entity("NAMIS.Models.biodataViewModel", b =>
                {
                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("SprpNo");

                    b.ToTable("biodataViewModel");
                });

            modelBuilder.Entity("NAMIS.Models.bydeaths", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfDeath")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(5000)");

                    b.Property<decimal>("GratuityPaidToEstate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(5000)");

                    b.Property<decimal>("OrphansPensionPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(5000)");

                    b.Property<decimal>("WindowsPensionPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("bydeaths");
                });

            modelBuilder.Entity("NAMIS.Models.byresignationorinvalidating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ContractGratuity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTerminated")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(2000)");

                    b.Property<decimal>("GrantuityOf")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(2000)");

                    b.Property<decimal>("PensionOf")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PensionOrContarct")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("byresignationorinvalidating");
                });

            modelBuilder.Entity("NAMIS.Models.bytransfers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("AggregateSalaryInNigeria")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AggregateServiceInNigeriaDays")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AggregateServiceInNigeriaMos")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AggregateServiceInNigeriaYrs")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfTransfer")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("PensionOrContarct")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("bytransfers");
                });

            modelBuilder.Entity("NAMIS.Models.createschedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Actions")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Controllers")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ForWho")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ScheduledName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("createschedule");
                });

            modelBuilder.Entity("NAMIS.Models.department", b =>
                {
                    b.Property<int>("DeptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("DeptID");

                    b.ToTable("department");
                });

            modelBuilder.Entity("NAMIS.Models.designation", b =>
                {
                    b.Property<int>("DesignationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cadre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Decoration")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DeptID")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("DesignationID");

                    b.ToTable("designation");
                });

            modelBuilder.Entity("NAMIS.Models.dpps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Checkedby")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FilePageRef")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("FrmDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Psemployer")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("dpps");
                });

            modelBuilder.Entity("NAMIS.Models.dpq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Dpq")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("dpq");
                });

            modelBuilder.Entity("NAMIS.Models.dsinforce", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArmOfService")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LastUnit")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ReasonForLeave")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ServiceNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("dsinforce");
                });

            modelBuilder.Entity("NAMIS.Models.educations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FrmDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TypeOfSchool")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("educations");
                });

            modelBuilder.Entity("NAMIS.Models.itstudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Authorise")
                        .HasColumnType("text");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EDates")
                        .HasColumnType("text");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text");

                    b.Property<string>("LStatus")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("NoOfDays")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QualificationInView")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("SDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SDates")
                        .HasColumnType("text");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignFor")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TrainingDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("itstudent");
                });

            modelBuilder.Entity("NAMIS.Models.languages", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ExamQualified")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("HodNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Spoken")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Written")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("NAMIS.Models.locals", b =>
                {
                    b.Property<int>("local_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LGAOrigin")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("state_id")
                        .HasColumnType("int");

                    b.HasKey("local_id");

                    b.ToTable("locals");
                });

            modelBuilder.Entity("NAMIS.Models.marragehistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfMarriage")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfWife")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<DateTime>("WifeDateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("marragehistory");
                });

            modelBuilder.Entity("NAMIS.Models.monthlyreturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<string>("CurrentAppointment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateD")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDue")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateF")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfCurrentAppointment")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("EmailID")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("text");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Mnt")
                        .HasColumnType("text");

                    b.Property<string>("PDepartment")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Remark1")
                        .HasColumnType("text");

                    b.Property<string>("Remark2")
                        .HasColumnType("text");

                    b.Property<string>("Remark3")
                        .HasColumnType("text");

                    b.Property<string>("Remark4")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("Yr")
                        .HasColumnType("text");

                    b.Property<string>("YrC")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("monthlyreturn");
                });

            modelBuilder.Entity("NAMIS.Models.nextofkin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("nextofkin");
                });

            modelBuilder.Entity("NAMIS.Models.particularofchildren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("particularofchildren");
                });

            modelBuilder.Entity("NAMIS.Models.recordofemolument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Authority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("BasicSalaryPA")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateOfEntery")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatePaidFrm")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("IncriminisDateM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IncriminisDateYr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("InducementPayPA")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NameAndStamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SalaryScale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("recordofemolument");
                });

            modelBuilder.Entity("NAMIS.Models.recordofservice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedByAndStamp")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfEntery")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("recordofservice");
                });

            modelBuilder.Entity("NAMIS.Models.recordofsickleaves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("FilePageNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FrmDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("NoOfDays")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TypeOfLeave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("recordofsickleaves");
                });

            modelBuilder.Entity("NAMIS.Models.register", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DOFA")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DOR")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("register");
                });

            modelBuilder.Entity("NAMIS.Models.reportupload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RId")
                        .HasColumnType("text");

                    b.Property<string>("ReportFile")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("reportupload");
                });

            modelBuilder.Entity("NAMIS.Models.reportwriting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Authorise")
                        .HasColumnType("text");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<string>("Copi")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignFor")
                        .HasColumnType("text");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("reportwriting");
                });

            modelBuilder.Entity("NAMIS.Models.retirementbiodata", b =>
                {
                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AppointmentStatus")
                        .HasColumnType("text");

                    b.Property<string>("Authorise")
                        .HasColumnType("text");

                    b.Property<string>("Authorisedby")
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("Carder")
                        .HasColumnType("text");

                    b.Property<string>("CheckBy")
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ConfirmationYr")
                        .HasColumnType("text");

                    b.Property<string>("CurrentAppointment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DateOfAppointment")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfCurrentAppointment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstAppointment")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfFirstArrival")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfPromotion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfRetirement")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Decoration")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("EmailID")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("GeographicalLocation")
                        .HasColumnType("text");

                    b.Property<string>("GradeLevel")
                        .HasColumnType("text");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("text");

                    b.Property<string>("IPPISNO")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LGAOrigin")
                        .HasColumnType("text");

                    b.Property<string>("LStatus")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("NHFNO")
                        .HasColumnType("text");

                    b.Property<string>("NHISNO")
                        .HasColumnType("text");

                    b.Property<string>("Natinality")
                        .HasColumnType("text");

                    b.Property<string>("PFA")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("text");

                    b.Property<string>("PinNo")
                        .HasColumnType("text");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("text");

                    b.Property<string>("ProStatus")
                        .HasColumnType("text");

                    b.Property<string>("ProYr")
                        .HasColumnType("text");

                    b.Property<string>("Proof")
                        .HasColumnType("text");

                    b.Property<string>("QualificationInView")
                        .HasColumnType("text");

                    b.Property<string>("RId")
                        .HasColumnType("text");

                    b.Property<string>("RMode")
                        .HasColumnType("text");

                    b.Property<string>("RStatus")
                        .HasColumnType("text");

                    b.Property<string>("RYr")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("SignFor")
                        .HasColumnType("text");

                    b.Property<string>("StateOfOrigin")
                        .HasColumnType("text");

                    b.Property<string>("StationName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Step")
                        .HasColumnType("text");

                    b.Property<string>("SubstansiveAppointment")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("TermsOfEngagement")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TrainingStatus")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("SprpNo");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("retirementbiodata");
                });

            modelBuilder.Entity("NAMIS.Models.rofcandcs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompiledBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("rofcandcs");
                });

            modelBuilder.Entity("NAMIS.Models.rofgpm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("FilePageRef")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FrmDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("Mos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RatePerAnum")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("Yrs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("rofgpm");
                });

            modelBuilder.Entity("NAMIS.Models.scheduled", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Actions")
                        .HasColumnType("text");

                    b.Property<string>("AllocatedBy")
                        .HasColumnType("text");

                    b.Property<string>("AllocatedUserID")
                        .HasColumnType("text");

                    b.Property<string>("Controllers")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("Expire")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScheduledType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SectionName")
                        .HasColumnType("text");

                    b.Property<string>("SectionRole")
                        .HasColumnType("text");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("scheduled");
                });

            modelBuilder.Entity("NAMIS.Models.schoolcertificatehelds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("schoolcertificateheld")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("schoolcertificatehelds");
                });

            modelBuilder.Entity("NAMIS.Models.sections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("sections");
                });

            modelBuilder.Entity("NAMIS.Models.signatures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SignFile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("signatures");
                });

            modelBuilder.Entity("NAMIS.Models.states", b =>
                {
                    b.Property<int>("state_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateOfOrigin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("state_id");

                    b.ToTable("states");
                });

            modelBuilder.Entity("NAMIS.Models.station", b =>
                {
                    b.Property<int>("StationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StationID");

                    b.ToTable("station");
                });

            modelBuilder.Entity("NAMIS.Models.totalpreviousservice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("Mos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalAmountPay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("Yrs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("totalpreviousservice");
                });

            modelBuilder.Entity("NAMIS.Models.tourandleaverecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDepartedOnLeave")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateDueForLeave")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateExtentionGranted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateResumedDuty")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime");

                    b.Property<string>("Dates")
                        .HasColumnType("text");

                    b.Property<string>("EdNote")
                        .HasColumnType("text");

                    b.Property<string>("GazetteNoticeNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GazetteNoticeNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HodNote")
                        .HasColumnType("text");

                    b.Property<string>("LeaveDays")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LeaveMonths")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LengthOfTourForAge")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassageBySeaOrAirFrmUk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassageBySeaOrAirToUk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResidentDays")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResidentMonths")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SalaryRuleForExtention")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SprpNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("UnitNote")
                        .HasColumnType("text");

                    b.Property<string>("bioSprpNo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("bioSprpNo");

                    b.ToTable("tourandleaverecord");
                });

            modelBuilder.Entity("NAMIS.Models.unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("unit");
                });

            modelBuilder.Entity("NAMIS.Models.useraccount", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("StaffName")
                        .HasColumnType("varchar(700)");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("mda")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("NAMIS.ViewModels.reportUploadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConId")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID1")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID2")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID3")
                        .HasColumnType("text");

                    b.Property<string>("ReceiverID4")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("reportUploadModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NAMIS.Models.useraccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NAMIS.Models.useraccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NAMIS.Models.useraccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NAMIS.Models.useraccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NAMIS.Models.CareerProgression", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.Confirmationofappointment", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.PersonelFile", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.StaffPosting", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.TrainingAndStudy", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.bydeaths", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.byresignationorinvalidating", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.bytransfers", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.dpps", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.dsinforce", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.educations", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.languages", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.marragehistory", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.monthlyreturn", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.nextofkin", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.particularofchildren", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.recordofemolument", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.recordofservice", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.recordofsickleaves", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.register", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.retirementbiodata", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.rofcandcs", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.rofgpm", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.schoolcertificatehelds", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.totalpreviousservice", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });

            modelBuilder.Entity("NAMIS.Models.tourandleaverecord", b =>
                {
                    b.HasOne("NAMIS.Models.biodata", "bio")
                        .WithMany()
                        .HasForeignKey("bioSprpNo");

                    b.Navigation("bio");
                });
#pragma warning restore 612, 618
        }
    }
}
