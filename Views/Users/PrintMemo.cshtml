@model IEnumerable<NAMIS.Models.Memo>

@{
    ViewData["Title"] = "Print Memo";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Print Memo</title>
</head>

<script lang="js" type="text/javascript">
    function printElem(divId) {

        var content = document.getElementById(divId).innerHTML;

        var mywindow = window.open('', 'Print', 'height=1000,width=500');

        mywindow.document.write('<html><head><title>Print</title>');
        mywindow.document.write('</head><body >');
        mywindow.document.write(content);
        mywindow.document.write('</body></html>');

        mywindow.document.close();
        mywindow.focus();

        mywindow.print();

        mywindow.close();

        return true;


    }
    var observe;
    if (window.attachEvent) {
        observe = function (element, event, handler) {
            element.attachEvent('on' + event, handler);
        };
    }
    else {
        observe = function (element, event, handler) {
            element.addEventListener(event, handler, false);
        };
    }
    function init() {
        var text = document.getElementById('text');
        function resize() {
            text.style.height = 'auto';
            text.style.height = text.scrollHeight + 'px';
        }
        /* 0-timeout to get the already changed text */
        function delayedResize() {
            window.setTimeout(resize, 0);
        }
        observe(text, 'change', resize);
        observe(text, 'cut', delayedResize);
        observe(text, 'paste', delayedResize);
        observe(text, 'drop', delayedResize);
        observe(text, 'keydown', delayedResize);

        text.focus();
        text.select();
        resize();
    }

</script>
<body onload="init();">
    <form class="form-inline ml-3">
        <div class="input-group input-group-sm">


            <button class="btn btn-navbar" onclick="printElem('prt');" id="btnPrint" value="Print" type="submit">
                <i class="fas fa-print"></i>
            </button>

        </div>
    </form>

    <div class="row">


        <div style="height: 100%;width: 100%;overflow-y: scroll;  overflow-x: auto" class="col-xs-12">
            <div style="overflow-y: hidden;  overflow-x: hidden" id="prt" class="table-responsive">


                @foreach (var item in Model)
                {
                <div style="text-align:center">
                    <b style="margin:0 auto;width:100%"> @Html.DisplayFor(modelItem => item.Nspri)</b>


                    <br />
                    <br />

                    <b style="        margin: 0 auto;
        width: 100%
">@Html.DisplayFor(modelItem => item.MemoTitle)</b>

               
                </div>
<br />


<div style="border-top: 1px black solid;
        border-bottom: 1px black solid;
        display: flex;
        flex-flow: row;
        justify-content: space-between
    ">
    <div style="border-right:1px black solid;width:50%;margin-right:.5rem;">
        <p style="margin-bottom:3rem">
           From: @Html.DisplayFor(modelItem => item.Address)
        </p>
        <p>
          Ref No:  @Html.DisplayFor(modelItem => item.RefNo)
        </p>
    </div>
    <div style="border-left:1px black solid;width:50%;padding-left:3rem">
        <p style="margin-bottom:3rem">To: @Html.DisplayFor(modelItem => item.Recipient)</p>
       
    <p>Date: @Html.DisplayFor(modelItem => item.Date)</p>
       
    </div>
</div>
<br />



<b>@Html.DisplayFor(modelItem => item.ReportTitle)</b>
<br />




<br />
<br />

<textarea id="text" style="border: 0 none white;
        overflow: hidden;
        padding: 0;
        outline: none;
        background-color: transparent;
        width: 100%;
        font-family: Times New Roman;
        font-size: 20px
">  @Html.DisplayFor(modelItem => item.Body)</textarea>






<br />
<br />
<br />
<br />




<img src="~/sign/@item.Authorise"
     class="rounded-circle"
     height="40" width="40"
     asp-append-version="true" />
<br />
@Html.DisplayFor(modelItem => item.Authorisedby)
<br />

@Html.DisplayFor(modelItem => item.SignFor)

}
            </div>
        </div>

    </div>
</body>
</html>