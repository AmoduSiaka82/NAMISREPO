@using PermissionManagement.MVC.Models;
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@inject SignInManager<useraccount> SignInManager
@inject UserManager<useraccount> UserManager
<ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
    <li class="nav-item has-treeview">
        @if (SignInManager.IsSignedIn(User))
        {
            var user = await UserManager.FindByIdAsync(User.FindFirstValue(ClaimTypes.NameIdentifier));
<a href="#" class="nav-link active">

    <p>
        <i class="far fa-user"></i>
        @user.StaffName!


    </p>
</a>
                <ul class="nav nav-treeview">
                    <li class="nav-item">
                        <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" class="nav-link">
                            <i class="far fa-envelope"></i>
                            @User.Identity.Name!
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <i class="fas fa-sign-out"></i>
                            Logout
                        </a>
                    </li>
                </ul> }
            else
            {

<ul class="nav nav-treeview">
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
</ul>}
    </li>
</ul>
